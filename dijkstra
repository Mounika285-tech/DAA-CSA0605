import numpy as np

def dijkstra(graph, source):
    num_vertices = len(graph)
    distances = [float('inf')] * num_vertices
    distances[source] = 0
    visited = [False] * num_vertices

    for _ in range(num_vertices):
        min_distance = float('inf')
        min_index = -1
        
        for v in range(num_vertices):
            if not visited[v] and distances[v] < min_distance:
                min_distance = distances[v]
                min_index = v
        
        visited[min_index] = True
        
        for v in range(num_vertices):
            if graph[min_index][v] != float('inf') and not visited[v]:
                new_distance = distances[min_index] + graph[min_index][v]
                if new_distance < distances[v]:
                    distances[v] = new_distance

    return distances

# Example usage
graph = [
    [0, 7, float('inf'), 9, float('inf'), 14],
    [7, 0, 10, 15, float('inf'), float('inf')],
    [float('inf'), 10, 0, float('inf'), 2, float('inf')],
    [9, 15, float('inf'), 0, 11, 2],
    [float('inf'), float('inf'), 2, 11, 0, 6],
    [14, float('inf'), float('inf'), 2, 6, 0]
]
source_vertex = 0
print(dijkstra(graph, source_vertex))
