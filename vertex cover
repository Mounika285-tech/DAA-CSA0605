def greedy_vertex_cover(graph):
    cover = set()
    edges = set(graph.edges())
    
    while edges:
        # Select an arbitrary edge
        u, v = edges.pop()
        cover.add(u)
        cover.add(v)
        
        # Remove all edges incident to u and v
        edges = {edge for edge in edges if u not in edge and v not in edge}
    
    return cover

# Example usage
import networkx as nx

G = nx.Graph()
G.add_edges_from([(1, 2), (1, 3), (2, 3), (3, 4)])
vertex_cover = greedy_vertex_cover(G)
print("Vertex Cover:", vertex_cover)
